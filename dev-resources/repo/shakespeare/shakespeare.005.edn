{:first-step "map-counts", :name "shakespeare", :revision 5, :type nil, :properties {}, :steps [{:id "map-counts", :type :map, :supertype :map, :next {"*" "reduce-counts"}, :workload-fn #titanoboa.exp.Expression{:value "(fn [job]\n  (mapv \n     (fn [i] {:properties {:txt-file i}})\n     (-> \"/home/miro/Dropbox/titanoboa/resources/test/shakes\" \n         java.io.File. \n         file-seq \n         rest)))"}, :properties {:jobdef-name "test-job", :sys-key :core, :standalone-system? false}, :revision 1} {:id "reduce-counts", :type :reduce, :supertype :reduce, :workload-fn #titanoboa.exp.Expression{:value "(fn [value item]\n  (let [value (or value {}) \n         counts (get-in item [:properties :word-counts])]\n         (update-in value [:properties :shakes-counts ] #(merge-with + % counts))))"}, :next {}, :properties {:map-step-id "map-counts", :commit-interval 15}, :revision 1}]}