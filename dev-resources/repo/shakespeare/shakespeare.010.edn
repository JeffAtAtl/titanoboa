{:first-step "map-counts", :properties {}, :revision 10, :name "shakespeare", :steps [{:properties {:sys-key :core, :jobdef-name "word-count", :standalone-system? false}, :revision 1, :type :map, :next [["*" "reduce-counts"]], :id "map-counts", :supertype :map, :workload-fn #titanoboa.exp.Expression{:value "(fn [job]\n  (mapv \n     (fn [i] {:properties {:txt-file i}})\n     (-> \"/home/miro/Dropbox/titanoboa/test/shakes\" \n         java.io.File. \n         file-seq \n         rest)))"}} {:properties {:commit-interval 15, :map-step-id "map-counts"}, :revision 1, :type :reduce, :next [], :id "reduce-counts", :supertype :reduce, :workload-fn #titanoboa.exp.Expression{:value "(fn [value item]\n  (let [value (or value {}) \n         counts (get-in item [:properties :word-counts])]\n         (update-in value [:properties :shakes-counts ] #(merge-with + % counts))))"}}], :type nil}