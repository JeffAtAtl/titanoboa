{:first-step "step", :name "test-job", :revision 12, :type nil, :properties {:create-folder? true}, :steps [{:id "step", :type :custom, :supertype :tasklet, :next {"*" "splitter"}, :workload-fn #titanoboa.exp.Expression{:value "titanoboa.processor/preprocess"}, :properties {}, :name "step"} {:id "splitter", :name "splitter", :type :map, :supertype :map, :workload-fn #titanoboa.exp.Expression{:value "(fn [p] \n       [{:properties {:name \"Miro\"} } \n         {:properties  {:name \"janka\"}} \n         {:properties  {:name \"Kris\"}}])"}, :next {"*" "aggregator"}, :properties {:jobdef-name "pokus", :sys-key :core, :workers-count 1, :standalone-system? true}} {:id "aggregator", :name "aggregator", :type :reduce, :supertype :reduce, :workload-fn #titanoboa.exp.Expression{:value " (fn [value item] \n   (println \"adding item \" (:name (:properties item)) \"to value \" value)\n   (let [value (update (or value {}) :exit #(str % \" \" (:name (:properties item))))\n         value (update-in value [:properties :all-names] #(str % \" \" (:name (:properties item))))]\n        value))"}, :next {}, :properties {:map-step-id "splitter", :commit-interval 10}}]}